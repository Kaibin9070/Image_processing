# -*- coding: utf-8 -*-
"""dicom2png.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V4Ym984Mp13Y6AXzxIrkkIV_rC94PRGg

# Load Dicom file
"""

import pydicom
import matplotlib.pyplot as plt
import numpy as np
import os
#dicom
dicom_file_path = './00000000'

ds = pydicom.dcmread(dicom_file_path)
image = ds.pixel_array
#ds ## uncomment to show dicom header

# 提取DICOM圖像的基本資訊
height = ds.Rows    ## 768
width = ds.Columns  ## 1024
num_frames = ds.NumberOfFrames ## 500

# 創建一個3D數組來存儲DICOM圖像
img = []

# 遍歷每個幀並提取第1個切片
for i in range(num_frames):
    img_slice = ds.pixel_array[i]
    img.append(img_slice)

# 將img轉換為NumPy數組（如果需要的話）
img = np.array(img)

img.shape

# 顯示DICOM影像
plt.imshow(img[250,:,:,:], cmap='gray')  # 使用灰度顏色映射
plt.title('DICOM Image')
plt.colorbar()  # 添加顏色條
plt.show()

pip install pillow

"""# Dicom2PNG"""

import pydicom
from PIL import Image
import os

# 指定DICOM文件的路徑
dicom_file_path = '00000000'

# 讀取DICOM文件
ds = pydicom.dcmread(dicom_file_path)

# 提取DICOM圖像的像素數據
img = ds.pixel_array

# 創建目錄來保存PNG文件
output_dir = './output_png'
os.makedirs(output_dir, exist_ok=True)

# 遍歷每個幀並保存為PNG文件
for i in range(ds.NumberOfFrames):
    frame_img = Image.fromarray(img[i])  # 將NumPy數組轉換為Pillow影像對象
    output_path = os.path.join(output_dir, f"frame_{i + 1}.png")
    frame_img.save(output_path)

print(f"已保存{ds.NumberOfFrames}個PNG文件到{output_dir}目錄。")

"""# 提取前100 frames作為新的dicom"""

import pydicom
import numpy as np

# 指定原始DICOM文件的路徑
original_dicom_file_path = '00000000'

# 讀取原始DICOM文件
ds = pydicom.dcmread(original_dicom_file_path)

# 提取前100幀的像素數據
num_frames_to_extract = 100
extracted_frames = ds.pixel_array[:num_frames_to_extract]

# 創建一個新的pydicom Dataset 對象
new_ds = pydicom.Dataset()

# 複製原始DICOM文件的元數據（metadata）
new_ds.update(ds)

# 更新新的DICOM文件的像素數據
new_ds.PixelData = extracted_frames.tobytes()

# 更新NumberOfFrames標籤，以反映新的幀數
new_ds.NumberOfFrames = num_frames_to_extract

# 設定適當的字節序和VR
new_ds.is_little_endian = ds.is_little_endian
new_ds.is_implicit_VR = ds.is_implicit_VR

# 保存新的DICOM文件
new_dicom_file_path = 'path_to_new_dicom.dcm'
new_ds.save_as(new_dicom_file_path)

print(f"已保存新的DICOM文件到 {new_dicom_file_path}，包含前 {num_frames_to_extract} 幀。")

